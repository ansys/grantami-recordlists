name: GitHub CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: '3.7'
  DOCUMENTATION_CNAME: 'grantami.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-grantami-recordlists'
  LIBRARY_NAMESPACE: 'ansys.grantami.recordlists'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: pyansys/actions/code-style@v3
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: pyansys/actions/doc-style@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: "Build and Smoke tests"
    runs-on: ${{ matrix.os }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v3
      - name: Download dependencies
        run: |
          gh run download -R pyansys/grantami-serverapi-openapi -n "ansys-grantami-serverapi-openapi-wheel" -D deps
        env:
          GITHUB_TOKEN: ${{ secrets.LUDOVIC_PAT }}
      - uses: pyansys/actions/build-wheelhouse@v3
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          library-namespace: ${{ env.LIBRARY_NAMESPACE }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          checkout: false


  tests:
    name: "Unit tests"
    runs-on: ${{ matrix.os }}
    needs: [smoke-tests]
    strategy:
      matrix:
       os: [ubuntu-latest, windows-latest]
       python-version: ['3.7', '3.8', '3.9', '3.10']
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Download dependencies
        run: gh run download -R pyansys/grantami-serverapi-openapi -n "ansys-grantami-serverapi-openapi-wheel" -D deps
        env:
          GITHUB_TOKEN: ${{ secrets.LUDOVIC_PAT }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry tox tox-gh-actions
      - name: Test with tox
        run: tox -- -m "not integration"

  integration_tests:
    name: "Integration tests"
    needs: [tests]
    if: ${{ !startsWith( github.event.pull_request.head.ref, 'dependabot/') }}
    uses: ./.github/workflows/server_checks.yml
    secrets:
      AZURE_APP_ID: ${{ secrets.AZURE_APP_ID }}
      AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      AZURE_VM_NAME: ${{ secrets.AZURE_VM_NAME }}
      TEST_SERVER_URL: ${{ secrets.TEST_SERVER_URL }}
      TEST_SERVER_ADMIN_USER: ${{ secrets.TEST_SERVER_ADMIN_USER }}
      TEST_SERVER_ADMIN_PASS: ${{ secrets.TEST_SERVER_ADMIN_PASS }}
      GH_PAT: ${{ secrets.LUDOVIC_PAT }}

  doc-build:
    name: "Build documentation"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - uses: actions/checkout@v3
      - name: Download dependencies
        run: gh run download -R pyansys/grantami-serverapi-openapi -n "ansys-grantami-serverapi-openapi-wheel" -D deps
        env:
          GITHUB_TOKEN: ${{ secrets.LUDOVIC_PAT }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install libkrb5-dev
          sudo apt install pandoc

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry tox
      - name: Generate the documentation with tox
        run: tox -e doc

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation-html
          path: .tox/doc_out/
          retention-days: 7

#  doc-deploy-dev:
#    name: "Deploy development documentation"
#    runs-on: ubuntu-latest
#    needs: [doc-build]
#    if: github.event_name == 'push'
#    steps:
#      - uses: pyansys/actions/doc-deploy-dev@v3
#        with:
#          cname: ${{ env.DOCUMENTATION_CNAME }}
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#  doc-deploy-stable:
#    name: "Deploy stable documentation"
#    runs-on: ubuntu-latest
#    needs: [doc-deploy-dev]
#    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
#    steps:
#      - uses: pyansys/actions/doc-deploy-stable@v3
#        with:
#          cname: ${{ env.DOCUMENTATION_CNAME }}
#          token: ${{ secrets.GITHUB_TOKEN }}

  build-library:
    name: "Build library basic example"
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v3
      - name: Download dependencies
        run: gh run download -R pyansys/grantami-serverapi-openapi -n "ansys-grantami-serverapi-openapi-wheel" -D grantami-recordlists/grantami-recordlists/deps
        env:
          GITHUB_TOKEN: ${{ secrets.LUDOVIC_PAT }}
      - uses: pyansys/actions/build-library@v3
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          checkout: false
