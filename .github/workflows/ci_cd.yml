name: CI
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish-to-private-pypi:
        description: Whether to publish the build to the private PyPI
        type: choice
        options:
          - 'true'
          - 'false'
        default: 'false'

env:
  MAIN_PYTHON_VERSION: '3.12'
  DOCUMENTATION_CNAME: 'recordlists.grantami.docs.pyansys.com'
  LIBRARY_NAME: 'ansys-grantami-recordlists'
  LIBRARY_NAMESPACE: 'ansys.grantami.recordlists'
  PIP_INDEX_URL: "https://${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/"
  UV_INDEX_URL: "https://${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/"
  POETRY_HTTP_BASIC_PRIVATE_PYPI_USERNAME: "PAT"
  POETRY_HTTP_BASIC_PRIVATE_PYPI_PASSWORD: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/code-style@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          skip-install: false

  doc-style:
    name: "Documentation style"
    runs-on: ubuntu-latest
    steps:
      - uses: ansys/actions/doc-style@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-build:
    name: Documentation Build (mock examples)
    runs-on: ubuntu-latest
    steps:
    - name: "Run Ansys documentation building action"
      uses: ansys/actions/doc-build@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
      with:
        check-links: false
        dependencies: "pandoc"
        sphinxopts: "-n -W --keep-going"

    - name: "Delete unneeded doc artifact"
      if: ${{ !startsWith( github.event.pull_request.head.ref, 'dependabot/') }}
      uses: geekyeggo/delete-artifact@f275313e70c08f6120db482d7a6b98377786765b # v5.1.0
      with:
        name: |
          documentation-html
          documentation-pdf

  build-wheelhouse:
    name: "Build wheelhouse for latest Python versions"
    runs-on: ${{ matrix.os }}
    needs: code-style
    permissions:
      id-token: write
      attestations: write
    strategy:
       matrix:
           os: [ubuntu-latest, windows-latest]
           python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: ansys/actions/build-wheelhouse@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}
          attest-provenance: true

  tests:
    name: "Tests Python ${{ matrix.python-version }}, ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    needs: build-wheelhouse
    strategy:
      matrix:
       os: [ubuntu-latest, windows-latest]
       python-version: ['3.10', '3.11', '3.12', '3.13']
      fail-fast: false
    steps:
      - name: "Checkout the repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0

      - name: "Set up Python ${{ matrix.python-version }}"
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install Python dependencies"
        run: |
          python -m pip install --upgrade pip poetry tox

      - name: "Test with tox"
        run: tox -e tests -- -m "not integration"

      - name: "Upload coverage artifacts"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        if: ${{ matrix.python-version == env.MAIN_PYTHON_VERSION && matrix.os == 'ubuntu-latest' && !startsWith( github.event.pull_request.head.ref, 'dependabot/') }}
        with:
          name: coverage-html-unittests
          path: .cov/html
          retention-days: 7

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7  # v5.5.1
        if: ${{ matrix.python-version == env.MAIN_PYTHON_VERSION && matrix.os == 'ubuntu-latest' && !startsWith( github.event.pull_request.head.ref, 'dependabot/') }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: .cov/xml
          flags: unittests
          fail_ci_if_error: true

  build-library:
    name: "Build library"
    runs-on: ubuntu-latest
    needs: [ doc-build, tests ]
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: ansys/actions/build-library@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          attest-provenance: true

  server-checks:
    name: "Server checks"
    needs: [tests]
    if: ${{ !startsWith( github.event.pull_request.head.ref, 'dependabot/') }}
    uses: ./.github/workflows/server_checks.yml
    with:
      skip-vm-management: ${{ vars.SKIP_VM_MANAGEMENT == 'true' }}
    secrets:
      inherit

  integration-checks-complete:
    name: "Integration checks complete"
    runs-on: ubuntu-latest
    if: always() && ( startsWith( github.event.pull_request.head.ref, 'dependabot/') || needs.server-checks.result == 'success' )
    needs: server-checks
    steps:
      - name: "Integration checks complete"
        run: echo "Integration checks complete"

  doc-deploy-dev:
    name: "Deploy development documentation"
    runs-on: ubuntu-latest
    needs: [server-checks]
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-dev@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  release-private-pypi:
    name: "Publish dev build to private PyPI"
    runs-on: ubuntu-latest
    needs: [ server-checks ]
    if: (github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main') && (inputs.publish-to-private-pypi == 'true')
    steps:
      - name: "Release to private PyPI"
        uses: ansys/actions/release-pypi-private@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

  update-changelog:
    name: "Update CHANGELOG for new tag"
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: ansys/actions/doc-deploy-changelog@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [build-library, server-checks, update-changelog]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - name: "Download the library artifacts from build-library step"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0  # v5.0.0
        with:
          name: ${{ env.LIBRARY_NAME }}-artifacts
          path: ${{ env.LIBRARY_NAME }}-artifacts

      - name: "Upload artifacts to PyPI using trusted publisher"
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e  # v1.13.0
        with:
          repository-url: "https://upload.pypi.org/legacy/"
          print-hash: true
          packages-dir: ${{ env.LIBRARY_NAME }}-artifacts
          skip-existing: false

      - uses: ansys/actions/release-github@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        name: "Release to GitHub"
        with:
          library-name: ${{ env.LIBRARY_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-deploy-stable:
    name: "Deploy stable documentation"
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - uses: ansys/actions/doc-deploy-stable@9de5aa715cf3c98a237b08e1a308c08599223c42  # v10.1.2
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          doc-artifact-name: documentation-html
          bot-user: ${{ secrets.PYANSYS_CI_BOT_USERNAME }}
          bot-email: ${{ secrets.PYANSYS_CI_BOT_EMAIL }}
