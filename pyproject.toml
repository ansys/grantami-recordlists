[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# Check https://python-poetry.org/docs/pyproject/ for all available sections
name = "ansys-grantami-recordlists"
version = "0.1.dev0"
description = "A python wrapper for granta mi recordlists api "
license = "MIT"
authors = ["ANSYS, Inc. <ansys.support@ansys.com>"]
maintainers = ["PyAnsys developers <pyansys.maintainers@ansys.com>"]
readme = "README.rst"
repository = "https://github.com/pyansys/grantami-recordlists"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
importlib-metadata = {version = "^4.0", python = "<3.8"}
ansys-grantami-serverapi-openapi = {path = "deps/ansys_grantami_serverapi_openapi-0.1.0.dev11-py3-none-any.whl"}

# Optional documentation dependencies
[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
Sphinx = "^5.1.1"
numpydoc = "^1.4.0"
ansys-sphinx-theme = "^0.4.2"
sphinx-copybutton = "^0.5.0"

# Optional testing dependencies
[tool.poetry.group.tests]
optional = true
[tool.poetry.group.tests.dependencies]
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
requests-mock = "^1.10.0"

# Optional build requirements
[tool.poetry.group.build]
optional = true
[tool.poetry.group.build.dependencies]
build = "^0.8.0"
twine = "^4.0.1"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.coverage.run]
source = ["ansys.grantami"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
markers = [
    """integration: test requires a real database (deselect with '-m \"not integration\"')"""
]